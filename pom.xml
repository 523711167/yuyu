<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<packaging>pom</packaging>

	<groupId>com.xiaoxipeng</groupId>
	<artifactId>yuyu</artifactId>
	<version>${revision}</version>

	<properties>
		<spring-cloud.version>2023.0.1</spring-cloud.version>
		<spring-cloud-alibaba.version>2023.0.1.0</spring-cloud-alibaba.version>

		<java.version>17</java.version>
		<revision>0.0.2</revision>

		<maven.plugin.version>3.11.0</maven.plugin.version>
		<maven.flatten.version>1.3.0</maven.flatten.version>

		<captcha.version>1.6.2</captcha.version>
		<easyexcel.version>3.3.4</easyexcel.version>
		<poi.version>4.1.2</poi.version>
		<mica.auto.version>3.1.3</mica.auto.version>

		<!-- 推荐使用Harbor -->
		<docker.registry.url>192.168.18.124:80</docker.registry.url>
		<docker.registry.host>http://${docker.registry.url}:2375</docker.registry.host>
		<docker.plugin.version>1.4.13</docker.plugin.version>
		<docker.registry.skip>true</docker.registry.skip>

		<maven.jar.version>3.4.2</maven.jar.version>
		<maven.test.skip>true</maven.test.skip>

	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-bom</artifactId>
				<version>3.5.9</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>yuyu-auth</module>
		<module>yuyu-api</module>
		<module>yuyu-gateway</module>
		<module>yuyu-config</module>
        <module>common-util</module>
        <module>yuyu-service-api</module>
        <module>yuyu-spring-boot-starter</module>
    </modules>

	<build>
		<pluginManagement>
			<!--	定义插件版本，同时定义默认目标操作		-->
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>3.2.10</version>
					<configuration>
						<!-- 打包后的名称 默认是 ${project.artifactId}-${project.version}.jar	-->
						<finalName>${project.build.finalName}</finalName>
					</configuration>
				</plugin>

				<!-- 在maven打包的生周期内执行antrun脚本			-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<!--	脚本内容：复制构建目录下的jar至工作目录的target	-->
								<target>
									<!--suppress UnresolvedMavenProperty -->
									<copy overwrite="true"
										  tofile="${project.root.directory}/target/${project.artifactId}.jar"
										  file="${project.build.directory}/${project.build.finalName}.jar"/>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!--	移除POM文件中的无关紧要的标签		-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${maven.flatten.version}</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>oss</flattenMode>
					<pomElements>
						<url>remove</url>
						<scm>remove</scm>
						<developers>remove</developers>
						<properties>remove</properties>
						<repositories>remove</repositories>
						<distributionManagement>remove</distributionManagement>
					</pomElements>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 其他插件 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
					<compilerArgs>
						<!--	编译后保留方法形参定义的名称，在反射getName可以获取对应定义的名称	，否则只能获取null	-->
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!--	获取当前工作目录，设置变量project.root.directory	-->
			<plugin>
				<groupId>org.commonjava.maven.plugins</groupId>
				<artifactId>directory-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>directories</id>
						<goals>
							<goal>highest-basedir</goal>
						</goals>
						<phase>initialize</phase>
						<configuration>
							<property>project.root.directory</property>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
